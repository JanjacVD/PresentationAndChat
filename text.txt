WEBSOCKETS
Handshake: The process begins with an initial HTTP-based handshake.
 The client sends an HTTP request to the server, indicating its intent to establish a WebSocket connection. 
 This handshake request includes specific headers, such as the Upgrade header with a value of "websocket"
  and the Connection header with a value of "Upgrade."

Upgrade: Upon receiving the handshake request, if the server supports WebSockets, 
it responds with an HTTP 101 Switching Protocols response. This response indicates that the server agrees to 
upgrade the connection to the WebSocket protocol.

WebSocket Connection: Once the upgrade is successful, the connection transitions from the HTTP protocol to the WebSocket 
protocol. From this point forward, the client and server can exchange data using the WebSocket protocol.

Data Exchange: With the WebSocket connection established, both the client and server can send messages to each other in real-time. 
The messages can be in the form of text or binary data. The WebSocket protocol provides a simple frame-based format for sending and 
receiving data, allowing efficient transmission and parsing of messages.

Event-Driven Communication: WebSockets are event-driven, meaning that the client and server can send messages asynchronously as
 events occur. For example, the server can push updates or notifications to the client without the client explicitly requesting
  the information. Similarly, the client can send messages to the server based on user actions or other events.

Connection Termination: The WebSocket connection remains open until either the client or server initiates its closure. 
Either side can send a special WebSocket close frame to signal the intent to close the connection. 
Once both sides have exchanged the close frames and acknowledged them, the connection is terminated.